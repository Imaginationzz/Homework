{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yazidrahmouni/Desktop/gitrepository/Homework/m4-d7-router/src/components/Carousel.jsx\";\nimport { Carousel, Spinner } from \"react-bootstrap\";\nimport React from \"react\"; //import ModalView from \"./CommentsList\";\n\nclass Sliders extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arrOfMovies: [],\n      fetching: true\n    };\n\n    this.chunk = (array, number) => {\n      const output = [];\n\n      while (array.length > 0) {\n        output.push(array.splice(0, number));\n      }\n\n      return output;\n    };\n\n    this.fetchMovies = async () => {\n      try {\n        const response = await fetch(\"http://www.omdbapi.com/?apikey=ad2a416a&s=\" + this.props.title);\n        const result = await response.json();\n        const movies = result.Search;\n        const movie = movies.map(movie => movie);\n        console.log(movies);\n        const arrOfMovies = this.chunk(movies, 10);\n        this.setState({\n          arrOfMovies: arrOfMovies,\n          fetching: false\n        });\n      } catch (e) {\n        console.log(e);\n        this.setState({\n          fetching: false\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.fetchMovies();\n    };\n\n    this.componentDidUpdate = previousProps => {\n      if (previousProps.title !== this.props.title) {\n        this.fetchMovies();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"ml-5\",\n          children: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), this.state.fetching && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"grow\",\n            variant: \"light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n        children: this.state.arrOfMovies.map((movies, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imagesContainer\",\n            children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"image-item\",\n              src: movie.Poster,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Sliders;","map":{"version":3,"sources":["/Users/yazidrahmouni/Desktop/gitrepository/Homework/m4-d7-router/src/components/Carousel.jsx"],"names":["Carousel","Spinner","React","Sliders","Component","state","arrOfMovies","fetching","chunk","array","number","output","length","push","splice","fetchMovies","response","fetch","props","title","result","json","movies","Search","movie","map","console","log","setState","e","componentDidMount","componentDidUpdate","previousProps","render","index","Poster"],"mappings":"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","sourcesContent":["import { Carousel, Spinner } from \"react-bootstrap\";\nimport React from \"react\";\n//import ModalView from \"./CommentsList\";\n\nclass Sliders extends React.Component {\n  state = {\n    arrOfMovies: [],\n    fetching: true,\n  };\n\n  chunk = (array, number) => {\n    const output = [];\n    while (array.length > 0) {\n      output.push(array.splice(0, number));\n    }\n    return output;\n  };\n\n  fetchMovies = async () => {\n    try {\n      const response = await fetch(\n        \"http://www.omdbapi.com/?apikey=ad2a416a&s=\" + this.props.title\n      );\n\n      const result = await response.json();\n      const movies = result.Search;\n\n      const movie = movies.map((movie) => movie);\n      console.log(movies);\n      const arrOfMovies = this.chunk(movies, 10);\n      this.setState({ arrOfMovies: arrOfMovies, fetching: false });\n    } catch (e) {\n      console.log(e);\n      this.setState({ fetching: false });\n    }\n  };\n\n  componentDidMount = () => {\n    this.fetchMovies();\n  };\n\n  componentDidUpdate = (previousProps) => {\n    if (previousProps.title !== this.props.title) {\n      this.fetchMovies();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"mb-5\">\n        <div className=\"text-white\">\n          <h2 className=\"ml-5\">{this.props.title}</h2>\n          {this.state.fetching && (\n            <div className=\"font-bold d-flex justify-content-center\">\n              <Spinner animation=\"grow\" variant=\"light\" />\n            </div>\n          )}\n        </div>\n        <Carousel>\n          {this.state.arrOfMovies.map((movies, index) => (\n            <Carousel.Item key={index}>\n              <div className=\"imagesContainer\">\n                {movies.map((movie) => (\n                  <img\n                    className=\"image-item\"\n                    src={movie.Poster}\n                    alt={movie.title}\n                  />\n                ))}\n              </div>\n            </Carousel.Item>\n          ))}\n        </Carousel>\n      </div>\n    );\n  }\n}\n\nexport default Sliders;\n"]},"metadata":{},"sourceType":"module"}